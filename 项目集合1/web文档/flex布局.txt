                                          flex布局
1.容器(父级元素)属性：
      注意：子元素宽度之和大于或等于父元素宽度时flex属性好像不起作用
    display:flex。( 注意：父级元素要设置该属性为弹性伸缩盒显示。
            不设置该属性flex布局则无效，设置了该属性的元素里的子元素如果是
            行内元素可以直接设置宽高，不用再升级为块级元素或行内元素。)

    flex-direction：属性决定主轴的方向（即项目的排列方向）。
          row(默认值):水平方向排列，且起点在左端。
          row-reverse:水平方向排列，且起点在右端(反序排列)
          column:垂直方向排列，顶部对齐
          column-reverse:底部对齐(反序排列)

    flex-wrap：(该元素中的子元素换行)
          nowrap（默认）：不换行。
          wrap:超出该元素的宽度限制则子元素换行(从上往下换行)。
          wrap-reverse:反序换行(从下往上换行)。

    flex-flow：是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。

    justify-content：定义了项目在主轴上的对齐方式(水平对齐)。
          flex-start（默认值）：左对齐。
          flex-end：右对齐。
          center： 居中对齐。
          space-between：两端对齐，项目之间的间隔都相等。
          space-around：每个项目两侧的间隔相等(即元素相同的左右边距)。

    align-items：定义项目在交叉轴(y轴或竖轴)上如何对齐(垂直对齐)。
          flex-start：交叉轴的起点对齐(顶部对齐)。
          flex-end：交叉轴的终点对齐(底部对齐)。
          center：交叉轴的中点对齐。
          baseline: 项目的第一行文字的基线对齐(文字的基线不一定都相同)。
          stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。

    align-content：多行垂直对齐方式。如果项目内只有一行或一列元素，
                   该属性不起作用。(用法同上面的水平对齐方式justify-content类似)
          flex-start：与交叉轴(y轴)的起点对齐(顶部对齐)。
          flex-end：与交叉轴的终点对齐(底部对齐)。
          center：与交叉轴的中点对齐。
          space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。
          space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框
                        的间隔大一倍。
          stretch（默认值）：轴线占满整个交叉轴。

2.项目(子级元素)属性：

    order:定义项目的排列顺序。数值越小，排列越靠前，默认为0。

    flex-grow:定义项目的放大比例，默认为0(即如果存在剩余空间，也不放大)。
              如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。
              如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将
              比其他项多一倍。
                                        计算公式：

              剩余空间宽度 = 父级元素的宽度 - 所有子元素的宽度之和

              子元素的宽度 = 剩余空间宽度 / 所有子元素的flex-grow属性值之和 * 子元素
              本身的flex-grow属性值 + 子元素

    flex-shrink:定义了项目的缩小比例，默认为1(即如果空间不足，该项目将缩小)。如果所
              有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个
              项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。负
              值对该属性无效。
                                        计算公式：

              超出宽度 = 子元素宽度之和 - 父元素的宽度

              子元素的缩放系数宽度 = 子元素初始宽度 * 子元素的flex-shrink值

              子元素的缩放系数宽度之和 = (即每个子元素的缩放系数宽度相加之和)

              子元素占超出空间的比例宽度 =  子元素的缩放系数宽度 / 子元素的缩放系数宽度
              之和 * 超出宽度

              子元素缩放后的实际宽度 = 子元素的初始宽度 - 子元素占超出空间的比例宽度

    flex-basis:定义了在分配多余空间之前，项目占据的主轴(x轴)空间(即宽度)。浏览器根据这个属性，
              计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小(原始宽度)。
              合法值："auto"、"inherit" 或一个后跟 "%"、"px"、"em" 或任何其他长度单位的数字。
              注意：该属性优先于width属性，不要同时设置这两个属性。
    flex:是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属
              性可选。flex:auto等同于flex：1 1 auto,flex:none等同于flex:0 0 auto。
              CSS代码中常见这样的写法：flex:1。(子元素长度相同)
    align-self:允许单个项目有与其他项目不一样的(垂直对齐)对齐方式，可覆盖align-items
              属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则
              等同于stretch(与父级元素相等)。除了auto值其余的属性值与align-items中的
              属性值作用相同
          auto：表示继承父元素的align-items属性。
          flex-start：
          flex-end：
          center：
          baseline：
          stretch：
